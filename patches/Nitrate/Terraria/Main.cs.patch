--- src/Nitrate_FormatWithEditorConfig/Terraria/Main.cs
+++ src/Nitrate/Terraria/Main.cs
@@ -6132,7 +_,7 @@
 		{
 			Map = new WorldMap(maxTilesX, maxTilesY);
 			Configuration.Load();
-			graphics = new GraphicsDeviceManager((object)this as Game)
+			graphics = new GraphicsDeviceManager(this)
 			{
 				/*
 	base.Content.RootDirectory = "Content";
@@ -10278,10 +_,13 @@
 		base.GraphicsDevice.DeviceLost += GraphicsDeviceLost;
 		base.GraphicsDevice.DeviceReset += GraphicsDeviceLost;
 		base.GraphicsDevice.DeviceResetting += GraphicsDeviceLost;
+
+		/*
 		if (_needsLanguageSelect)
 		{
 			menuMode = 1212;
 		}
+		*/
 
 		_achievements = new AchievementManager();
 		_achievementAdvisor = new AchievementAdvisor();
@@ -10477,6 +_,12 @@
 		CacheSupportedDisplaySizes();
 		ContentSamples.RebuildItemCreativeSortingIDsAfterRecipesAreSetUp();
 		ContentSamples.CommonlyUsedContentSamples.PrepareAfterEverythingElseLoaded();
+
+		if (_needsLanguageSelect)
+		{
+			menuMode = 888;
+			MenuUI.SetState(languageSelectMenu_InitialLanguageSelect);
+		}
 	}
 
 	private IEnumerator LoadMusic_InSteps()
@@ -11557,7 +_,7 @@
 				}
 			}
 
-			LoaderManager.Get<SceneEffectLoader>().UpdateMusic(ref modMusic, ref modPriority);
+			SceneEffectLoader.UpdateMusic(ref modMusic, ref modPriority);
 		}
 
 		_ = (screenPosition.X + (float)(screenWidth / 2)) / 16f;
@@ -12211,7 +_,7 @@
 				}
 			}
 
-			LoaderManager.Get<SceneEffectLoader>().UpdateMusic(ref modMusic, ref modPriority);
+			SceneEffectLoader.UpdateMusic(ref modMusic, ref modPriority);
 		}
 
 		_ = (screenPosition.X + (float)(screenWidth / 2)) / 16f;
@@ -21757,7 +_,7 @@
 			var num6 = 0;
 			for (var i = 0; i < NPCLoader.NPCCount; i++)
 			{
-				if (Item.BannerToNPC(i) != 0 && player[myPlayer].HasNPCBannerBuff(i))
+				if (Item.BannerToNPC(i) != 0 && Player.HasNPCBannerBuff(i))
 				{
 					num6++;
 					var nPCNameValue = Lang.GetNPCNameValue(Item.BannerToNPC(i));
@@ -21849,7 +_,7 @@
 		var num13 = 0;
 		for (var l = 0; l < NPCLoader.NPCCount; l++)
 		{
-			if (Item.BannerToNPC(l) == 0 || !player[myPlayer].HasNPCBannerBuff(l))
+			if (Item.BannerToNPC(l) == 0 || !Player.HasNPCBannerBuff(l))
 			{
 				continue;
 			}
@@ -23077,7 +_,7 @@
 				var color = Lighting.GetColor((int)vector.X / 16, (int)(vector.Y / 16f));
 				if (rCurrentNPC.IsABestiaryIconDummy)
 				{
-					color = rCurrentNPC.GetBestiaryEntryColor();
+					color = NPC.GetBestiaryEntryColor();
 				}
 
 				if (!flag3)
@@ -23126,7 +_,7 @@
 				var color2 = Lighting.GetColor((int)vector2.X / 16, (int)(vector2.Y / 16f));
 				if (rCurrentNPC.IsABestiaryIconDummy)
 				{
-					color2 = rCurrentNPC.GetBestiaryEntryColor();
+					color2 = NPC.GetBestiaryEntryColor();
 				}
 
 				if (type == 259 || type == 260)
@@ -23379,7 +_,7 @@
 		var npcColor = Lighting.GetColor((int)((double)rCurrentNPC.position.X + (double)rCurrentNPC.width * 0.5) / 16, (int)(((double)rCurrentNPC.position.Y + (double)rCurrentNPC.height * 0.5) / 16.0));
 		if (rCurrentNPC.IsABestiaryIconDummy)
 		{
-			npcColor = rCurrentNPC.GetBestiaryEntryColor();
+			npcColor = NPC.GetBestiaryEntryColor();
 		}
 
 		if (type >= 277 && type <= 280)
@@ -28834,7 +_,7 @@
 
 		if (proj.type == 933)
 		{
-			default(FinalFractalHelper).Draw(proj);
+			FinalFractalHelper.Draw(proj);
 		}
 
 		if (proj.type == 79)
@@ -43690,7 +_,7 @@
 
 				if (mouseLeft && mouseLeftRelease && player[myPlayer].team != i && teamCooldown == 0)
 				{
-					if (!player[myPlayer].TeamChangeAllowed())
+					if (!Player.TeamChangeAllowed())
 					{
 						NewText(Lang.misc[84].Value, byte.MaxValue, 240, 20);
 					}
@@ -48029,7 +_,7 @@
 		var text = "";
 		var num4 = 215f;
 		var startX = 0;
-		if (GameCulture.FromCultureName(GameCulture.CultureName.Russian).IsActive)
+		if (RU_RU.IsActive)
 		{
 			startX = -50;
 			num4 += 50f;
@@ -51430,7 +_,8 @@
 				if (selectedMenu == num20)
 				{
 					SoundEngine.PlaySound(10);
-					menuMode = 1213;
+					menuMode = 888;
+					MenuUI.SetState(languageSelectMenu);
 				}
 
 				// TML settings
@@ -52818,7 +_,7 @@
 
 		if (menuMode == 888)
 		{
-			if (!_blockFancyUIWhileLoading)
+			if (!_blockFancyUIWhileLoading && Assets is not null)
 			{
 				MenuUI.Draw(spriteBatch, gameTime);
 			}
@@ -53864,7 +_,7 @@
 
 	private void OnSubmitServerPassword()
 	{
-		var text = "-autoshutdown -password \"" + ConvertToSafeArgument(Netplay.ServerPassword) + "\" -lang " + Language.ActiveCulture.LegacyId;
+		var text = "-autoshutdown -password \"" + ConvertToSafeArgument(Netplay.ServerPassword) + "\" -language " + Language.ActiveCulture.CultureInfo.Name;
 		if (Platform.IsLinux)
 		{
 			text = ((IntPtr.Size != 8) ? (text + " -x86") : (text + " -x64"));
@@ -60709,7 +_,7 @@
 				var flag5 = false;
 				var num11 = 0f;
 				var tile = Main.tile[j, i];
-				if (flag && player[myPlayer].CanDoWireStuffHere(j, i))
+				if (flag && Player.CanDoWireStuffHere(j, i))
 				{
 					var num12 = 0;
 					if (tile.active())
