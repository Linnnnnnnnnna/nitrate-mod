--- src/tModLoader/ReLogic/Content/Readers/XnbReader.cs
+++ src/Nitrate/ReLogic/Content/Readers/XnbReader.cs
@@ -4,18 +_,11 @@
 using System.Threading;
 using System.Threading.Tasks;
 using Microsoft.Xna.Framework.Content;
-using Microsoft.Xna.Framework.Graphics;
 
 namespace ReLogic.Content.Readers;
 
-public class XnbReader : IAssetReader, IDisposable
+public partial class XnbReader : IAssetReader, IDisposable
 {
-	// Added by TML.
-	public static class LoadOnMainThread<T>
-	{
-		public static bool Value;
-	}
-
 	private class InternalContentManager : ContentManager
 	{
 		private Stream _stream;
@@ -42,17 +_,17 @@
 		_contentLoader = new ThreadLocal<InternalContentManager>(() => new InternalContentManager(services));
 	}
 
-	/*
-	public T FromStream<T>(Stream stream) where T : class
-	*/
+	// TML: Implement modified asynchronous signature.
 	public async ValueTask<T> FromStream<T>(Stream stream, MainThreadCreationContext mainThreadCtx) where T : class
 	{
 		InternalContentManager value = _contentLoader.Value;
 
+		// BEGIN TML: Add check for waiting for main thread context and asserting completion.
-		if (LoadOnMainThread<T>.Value) {
+		if (GetLoadOnMainThread<T>()) {
 			await mainThreadCtx;
 			Debug.Assert(mainThreadCtx.IsCompleted);
 		}
+		// END TML
 
 		value.SetStream(stream);
 		return value.Load<T>();
